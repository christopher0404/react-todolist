{"version":3,"sources":["hooks/useInput.js","hooks/useTodos.js","TodoItem.js","App.js","index.js"],"names":["useInput","useState","inputValue","setInputValue","handleInputChange","event","target","value","useTodos","newTodo","setNewTodo","id","useRef","todoData","JSON","parse","window","localStorage","getItem","undefined","current","todos","setTodos","filter","setFilter","useEffect","setItem","stringify","addTodosToLocalStorage","handleNewTodo","conditions","content","trim","isCompleted","isEditing","updateFilter","useCallback","newFilter","useMemo","todo","handleNewTodoClick","handleNewTodoKeyDown","key","handleToggleIsCompleted","map","handleDeleteTodo","handleClearCompletedTodos","handleEditingTodo","handleEditingTodoBlur","handleEditingTodoKeyDown","TodoListItem","styled","li","TodoItemWrapper","div","TodoItemCheckbox","input","TodoName","label","props","$isCompleted","EditingTodoInput","DeleteTodoButton","button","TodoItem","type","defaultChecked","onClick","minLength","maxLength","defaultValue","onChange","onBlur","onKeyDown","GlobalStyle","createGlobalStyle","AppContainer","NewTodoInputWrapper","header","NewTodoInput","Button","AddTodoButton","ClearButton","FilterButton","$isActive","ClearButtonWrapper","FilterWrapper","TodoList","ul","App","ReactDOM","render","document","getElementById"],"mappings":"4MAEe,SAASA,IAAY,IAAD,EACGC,mBAAS,IADZ,mBAC1BC,EAD0B,KACdC,EADc,KAIjC,MAAO,CACLD,aACAC,gBACAC,kBALwB,SAACC,GAAD,OAAWF,EAAcE,EAAMC,OAAOC,SCGnD,SAASC,IAAY,IAAD,EAK7BR,IAHUS,EAFmB,EAE/BP,WACeQ,EAHgB,EAG/BP,cACAC,EAJ+B,EAI/BA,kBAGIO,EAAKC,iBAAO,GAPe,EASPX,oBAAS,WACjC,IAAIY,EAAWC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,UAEtD,OAAIL,QAA4BM,IAAhBN,EAAS,IACvBF,EAAGS,QAAUP,EAAS,GAAGF,GAAK,EACvBE,GAGF,MAjBwB,mBAS1BQ,EAT0B,KASnBC,EATmB,OAoBLrB,mBAAS,OApBJ,mBAoB1BsB,EApB0B,KAoBlBC,EApBkB,KAsBjCC,qBAAU,YA1BZ,SAAgCJ,GAC9BL,OAAOC,aAAaS,QAAQ,QAASZ,KAAKa,UAAUN,IA0BlDO,CAAuBP,KACtB,CAACA,IAEJ,IAAMQ,EAAgB,SAACC,GACjBA,IACFR,EAAS,CACP,CACEX,GAAIA,EAAGS,QACPW,QAAStB,EAAQuB,OACjBC,aAAa,EACbC,WAAW,IALP,mBAOHb,KAELX,EAAW,IACXC,EAAGS,YA6FDe,EAAeC,uBAAY,SAACC,GAChCb,EAAUa,KACT,IASH,MAAO,CACLhB,MARoBiB,mBAAQ,WAC5B,OAAOjB,EAAME,QAAO,SAACgB,GACnB,MAAe,QAAXhB,IACc,gBAAXA,GAA4BgB,EAAKN,YAAcM,EAAKN,kBAE5D,CAACZ,EAAOE,IAITd,UACAc,SACAY,eACAK,mBAzGyB,WACzBX,EAAiC,KAAnBpB,EAAQuB,SAyGtBS,qBAtG2B,SAACpC,GAC5BwB,EAAiC,KAAnBpB,EAAQuB,QAA+B,UAAd3B,EAAMqC,MAsG7CtC,oBACAuC,wBA5F8B,SAAChC,GAC/BW,EACED,EAAMuB,KAAI,SAACL,GACT,OAAIA,EAAK5B,KAAOA,EAAW4B,EAEpB,2BACFA,GADL,IAEEN,aAAcM,EAAKN,mBAsFzBY,iBArGuB,SAAClC,GACxBW,EAASD,EAAME,QAAO,SAACgB,GAAD,OAAUA,EAAK5B,KAAOA,OAqG5CmC,0BAlGgC,WAChCxB,EAASD,EAAME,QAAO,SAACgB,GAAD,OAA+B,IAArBA,EAAKN,iBAkGrCc,kBAlFwB,SAACpC,GACzBW,EACED,EAAMuB,KAAI,SAACL,GACT,OAAIA,EAAK5B,KAAOA,EAAW4B,EAEpB,2BACFA,GADL,IAEEL,WAAYK,EAAKL,iBA4EvBc,sBAtE4B,SAAC3C,GACF,KAAvBA,EAAMC,OAAOC,OAEjBe,EACED,EAAMuB,KAAI,SAACL,GACT,OAAKA,EAAKL,UAEH,2BACFK,GADL,IAEER,QAAS1B,EAAMC,OAAOC,MAAMyB,OAC5BE,WAAW,IALeK,OAkEhCU,yBAvD+B,SAAC5C,GACL,KAAvBA,EAAMC,OAAOC,QAEC,WAAdF,EAAMqC,KAAkC,QAAdrC,EAAMqC,KAClCpB,EACED,EAAMuB,KAAI,SAACL,GACT,OAAKA,EAAKL,UAEH,2BACFK,GADL,IAEEL,WAAW,IAJeK,MAUhB,UAAdlC,EAAMqC,KACRpB,EACED,EAAMuB,KAAI,SAACL,GACT,OAAKA,EAAKL,UAEH,2BACFK,GADL,IAEER,QAAS1B,EAAMC,OAAOC,MAAMyB,OAC5BE,WAAW,IALeK,S,8BC1HhCW,EAAeC,IAAOC,GAAV,4FAMZC,EAAkBF,IAAOG,IAAV,2QAcfC,EAAmBJ,IAAOK,MAAV,sLAUhBC,EAAWN,IAAOO,MAAV,oIAMV,SAAAC,GAAK,OAAIA,EAAMC,cAAN,mFAMPC,EAAmBV,IAAOK,MAAV,sLAUhBM,EAAmBX,IAAOY,OAAV,mHAwEPC,I,sBAAAA,EAjEf,YAOI,IANFzB,EAMC,EANDA,KACAM,EAKC,EALDA,iBACAF,EAIC,EAJDA,wBACAI,EAGC,EAHDA,kBACAC,EAEC,EAFDA,sBACAC,EACC,EADDA,yBAEQ7C,EAAsBJ,IAAtBI,kBAcR,OACE,eAAC8C,EAAD,WACE,eAACG,EAAD,WACE,cAACE,EAAD,CACEU,KAAK,WACLC,eAAgB3B,EAAKN,YACrBkC,QAlBoB,WAC1BxB,EAAwBJ,EAAK5B,OAmBxB4B,EAAKL,UACJ,cAAC2B,EAAD,CACEO,UAAW,EACXC,UAAW,GACXC,aAAc/B,EAAKR,QACnBwC,SAAUnE,EACVoE,OAAQxB,EACRyB,UAAWxB,IAGb,cAACQ,EAAD,CAAUG,aAAcrB,EAAKN,YAAakC,QAtB1B,WACtBpB,EAAkBR,EAAK5B,KAqBjB,SACG4B,EAAKR,aAIZ,cAAC+B,EAAD,CAAkBK,QA/BI,WACxBtB,EAAiBN,EAAK5B,KA8BpB,sBCtGA+D,G,MAAcC,YAAH,2PAeXC,EAAezB,IAAOG,IAAV,gXAiBZuB,EAAsB1B,IAAO2B,OAAV,wJAOnBC,EAAe5B,IAAOK,MAAV,+XAmBZwB,EAAS7B,IAAOY,OAAV,8NAaNkB,EAAgB9B,YAAO6B,EAAP7B,CAAH,iLAYb+B,EAAc/B,YAAO6B,EAAP7B,CAAH,qJAWXgC,EAAehC,YAAO6B,EAAP7B,CAAH,2HACF,SAACQ,GAAD,OAAYA,EAAMyB,UAAY,UAAY,UAC/C,SAACzB,GAAD,OAAYA,EAAMyB,UAAY,OAAS,aAQ5CC,EAAqBlC,IAAOG,IAAV,kDAIlBgC,EAAgBnC,IAAOG,IAAV,sEAKbiC,EAAWpC,IAAOqC,GAAV,6FAMC,SAASC,IAAO,IAAD,EAexBjF,IAbFa,EAF0B,EAE1BA,MACAZ,EAH0B,EAG1BA,QACAc,EAJ0B,EAI1BA,OACAiB,EAL0B,EAK1BA,mBACAC,EAN0B,EAM1BA,qBACArC,EAP0B,EAO1BA,kBACAuC,EAR0B,EAQ1BA,wBACAE,EAT0B,EAS1BA,iBACAC,EAV0B,EAU1BA,0BACAC,EAX0B,EAW1BA,kBACAC,EAZ0B,EAY1BA,sBACAC,EAb0B,EAa1BA,yBACAd,EAd0B,EAc1BA,aAGF,OACE,eAACyC,EAAD,WACE,cAACF,EAAD,IAEA,eAACG,EAAD,WACE,cAACE,EAAD,CACEX,UAAW,EACXC,UAAW,GACX9D,MAAOE,EACP8D,SAAUnE,EACVqE,UAAWhC,IAEb,cAACwC,EAAD,CAAed,QAAS3B,EAAxB,oBAGF,eAAC8C,EAAD,WACE,cAACH,EAAD,CACEhB,QAAS,kBAAMhC,EAAa,QAC5BiD,UAAsB,QAAX7D,EAFb,iBAMA,cAAC4D,EAAD,CACEhB,QAAS,kBAAMhC,EAAa,gBAC5BiD,UAAsB,gBAAX7D,EAFb,yBAMA,cAAC4D,EAAD,CACEhB,QAAS,kBAAMhC,EAAa,cAC5BiD,UAAsB,cAAX7D,EAFb,0BAQF,cAACgE,EAAD,UACGlE,EAAMuB,KAAI,SAACL,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNM,iBAAkBA,EAClBF,wBAAyBA,EACzBI,kBAAmBA,EACnBC,sBAAuBA,EACvBC,yBAA0BA,GANrBV,EAAK5B,SAWhB,cAAC0E,EAAD,UACE,cAACH,EAAD,CAAaf,QAASrB,EAAtB,wBC7LR4C,IAASC,OAAO,cAACF,EAAD,IAASG,SAASC,eAAe,W","file":"static/js/main.9f112138.chunk.js","sourcesContent":["import { useState } from 'react';\n\nexport default function useInput() {\n  const [inputValue, setInputValue] = useState('');\n  const handleInputChange = (event) => setInputValue(event.target.value);\n\n  return {\n    inputValue,\n    setInputValue,\n    handleInputChange,\n  };\n}\n","import { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport useInput from './useInput';\n\nfunction addTodosToLocalStorage(todos) {\n  window.localStorage.setItem('todos', JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  const {\n    inputValue: newTodo,\n    setInputValue: setNewTodo,\n    handleInputChange,\n  } = useInput();\n\n  const id = useRef(1);\n\n  const [todos, setTodos] = useState(() => {\n    let todoData = JSON.parse(window.localStorage.getItem('todos'));\n\n    if (todoData && todoData[0] !== undefined) {\n      id.current = todoData[0].id + 1;\n      return todoData;\n    }\n\n    return [];\n  });\n\n  const [filter, setFilter] = useState('all');\n\n  useEffect(() => {\n    addTodosToLocalStorage(todos);\n  }, [todos]);\n\n  const handleNewTodo = (conditions) => {\n    if (conditions) {\n      setTodos([\n        {\n          id: id.current,\n          content: newTodo.trim(),\n          isCompleted: false,\n          isEditing: false,\n        },\n        ...todos,\n      ]);\n      setNewTodo('');\n      id.current++;\n    }\n  };\n\n  const handleNewTodoClick = () => {\n    handleNewTodo(newTodo.trim() !== '');\n  };\n\n  const handleNewTodoKeyDown = (event) => {\n    handleNewTodo(newTodo.trim() !== '' && event.key === 'Enter');\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleClearCompletedTodos = () => {\n    setTodos(todos.filter((todo) => todo.isCompleted === false));\n  };\n\n  const handleToggleIsCompleted = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n\n        return {\n          ...todo,\n          isCompleted: !todo.isCompleted,\n        };\n      })\n    );\n  };\n\n  const handleEditingTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n\n        return {\n          ...todo,\n          isEditing: !todo.isEditing,\n        };\n      })\n    );\n  };\n\n  const handleEditingTodoBlur = (event) => {\n    if (event.target.value === '') return;\n\n    setTodos(\n      todos.map((todo) => {\n        if (!todo.isEditing) return todo;\n\n        return {\n          ...todo,\n          content: event.target.value.trim(),\n          isEditing: false,\n        };\n      })\n    );\n  };\n\n  const handleEditingTodoKeyDown = (event) => {\n    if (event.target.value === '') return;\n\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      setTodos(\n        todos.map((todo) => {\n          if (!todo.isEditing) return todo;\n\n          return {\n            ...todo,\n            isEditing: false,\n          };\n        })\n      );\n    }\n\n    if (event.key === 'Enter') {\n      setTodos(\n        todos.map((todo) => {\n          if (!todo.isEditing) return todo;\n\n          return {\n            ...todo,\n            content: event.target.value.trim(),\n            isEditing: false,\n          };\n        })\n      );\n    }\n  };\n\n  const updateFilter = useCallback((newFilter) => {\n    setFilter(newFilter);\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter((todo) => {\n      if (filter === 'all') return true;\n      return filter === 'uncompleted' ? !todo.isCompleted : todo.isCompleted;\n    });\n  }, [todos, filter]);\n\n  return {\n    todos: filteredTodos,\n    newTodo,\n    filter,\n    updateFilter,\n    handleNewTodoClick,\n    handleNewTodoKeyDown,\n    handleInputChange,\n    handleToggleIsCompleted,\n    handleDeleteTodo,\n    handleClearCompletedTodos,\n    handleEditingTodo,\n    handleEditingTodoBlur,\n    handleEditingTodoKeyDown,\n  };\n}\n","import PropTypes from 'prop-types';\nimport useInput from './hooks/useInput';\nimport styled from 'styled-components';\n\nconst TodoListItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin: 0.25rem 0;\n`;\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n  padding: 0.5rem 0.75rem;\n  border-radius: 0.5rem;\n  transition: all 0.4s ease-in-out;\n\n  &:focus-within,\n  &:hover {\n    background-color: rgba(104, 128, 144, 0.05);\n  }\n`;\n\nconst TodoItemCheckbox = styled.input`\n  flex-shrink: 0;\n  width: 1.25rem;\n  height: 1.25rem;\n  border-color: #688090;\n  border-radius: 0.25rem;\n  margin-right: 1rem;\n  cursor: pointer;\n`;\n\nconst TodoName = styled.label`\n  flex-grow: 1;\n  font-size: 1.25rem;\n  word-break: break-word;\n  transition: all 1s ease;\n\n  ${props => props.$isCompleted && `\n    color: rgba(104, 128, 144, .5);\n    text-decoration: line-through;\n  `}\n`;\n\nconst EditingTodoInput = styled.input`\n  appearance: none;\n  background: none;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid #688090;\n  flex-grow: 1;\n  font-size: 1.25rem;\n`;\n\nconst DeleteTodoButton = styled.button`\n  padding: 0.25rem 0.5rem;\n  border: none;\n  color: #688090;\n  font-size: 1.75rem;\n`;\n\nfunction TodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsCompleted,\n  handleEditingTodo,\n  handleEditingTodoBlur,\n  handleEditingTodoKeyDown,\n}) {\n  const { handleInputChange } = useInput();\n\n  const handleCheckboxClick = () => {\n    handleToggleIsCompleted(todo.id);\n  };\n\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  const handleTodoClick = () => {\n    handleEditingTodo(todo.id);\n  };\n\n  return (\n    <TodoListItem>\n      <TodoItemWrapper>\n        <TodoItemCheckbox\n          type=\"checkbox\"\n          defaultChecked={todo.isCompleted}\n          onClick={handleCheckboxClick}\n        />\n        {todo.isEditing ? (\n          <EditingTodoInput\n            minLength={1}\n            maxLength={64}\n            defaultValue={todo.content}\n            onChange={handleInputChange}\n            onBlur={handleEditingTodoBlur}\n            onKeyDown={handleEditingTodoKeyDown}\n          />\n        ) : (\n          <TodoName $isCompleted={todo.isCompleted} onClick={handleTodoClick}>\n            {todo.content}\n          </TodoName>\n        )}\n      </TodoItemWrapper>\n      <DeleteTodoButton onClick={handleDeleteClick}>&times;</DeleteTodoButton>\n    </TodoListItem>\n  );\n}\n\nTodoItem.propTypes = {\n  className: PropTypes.string,\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isCompleted: PropTypes.bool,\n    isEditing: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsCompleted: PropTypes.func,\n  handleEditingTodo: PropTypes.func,\n  handleEditingTodoBlur: PropTypes.func,\n  handleEditingTodoKeyDown: PropTypes.func,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport useTodos from './hooks/useTodos';\nimport TodoItem from './TodoItem';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport './style/main.min.css';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    padding-top: 8rem;\n    background-color: #fff;\n    color: #688090;\n\n    @media (max-width: 32em) {\n      display: grid;\n      place-items: center;\n      padding: 0;\n      margin: 4rem 0;\n    }\n  }\n`;\n\nconst AppContainer = styled.div`\n  max-width: 36rem;\n  padding: 3rem 2.5rem 2.5rem;\n  border-radius: 1.5rem;\n  margin: 0 auto;\n  box-shadow: 0 0 2rem rgba(104, 128, 144, 0.25);\n  transition: all 0.4s ease-in-out;\n\n  &:focus-within {\n    box-shadow: 0 0 1rem rgba(104, 128, 144, 0.25);\n  }\n\n  @media (max-width: 32em) {\n    padding: 2.25rem 1.5rem 1.5rem;\n  }\n`;\n\nconst NewTodoInputWrapper = styled.header`\n  display: flex;\n  padding-bottom: 2rem;\n  border-bottom: 1px solid rgba(104, 128, 144, 0.25);\n  margin-bottom: 1.5rem;\n`;\n\nconst NewTodoInput = styled.input`\n  flex-grow: 1;\n  appearance: none;\n  background: none;\n  padding: 0.75rem 1rem;\n  border: 1px solid rgba(104, 128, 144, 0.25);\n  border-radius: 64rem;\n  color: #688090;\n  font-size: 1rem;\n  letter-spacing: 1px;\n  transition: all 0.4s ease-in-out;\n\n  &:focus {\n    background-color: #fff;\n    border-color: #688090;\n    outline: none;\n  }\n`;\n\nconst Button = styled.button`\n  border: 1px solid transparent;\n  border-radius: 64rem;\n  padding: 0.75rem 1rem;\n  font-size: 1rem;\n  transition: all 0.4s ease-in-out;\n\n  &:focus,\n  &:hover {\n    outline: none;\n  }\n`;\n\nconst AddTodoButton = styled(Button)`\n  margin-left: 1rem;\n  border-color: #688090;\n  color: #688090;\n\n  &:focus,\n  &:hover {\n    background-color: #688090;\n    color: #fff;\n  }\n`;\n\nconst ClearButton = styled(Button)`\n  border-color: #db7093;\n  color: #db7093;\n\n  &:focus,\n  &:hover {\n    background: #db7093;\n    color: #fff;\n  }\n`;\n\nconst FilterButton = styled(Button)`\n  background: ${(props) => (props.$isActive ? '#688090' : 'none')};\n  color: ${(props) => (props.$isActive ? '#fff' : '#688090')};\n\n  &:focus,\n  &:hover {\n    border-color: #688090;\n  }\n`;\n\nconst ClearButtonWrapper = styled.div`\n  text-align: right;\n`;\n\nconst FilterWrapper = styled.div`\n  display: flex;\n  margin-bottom: 1rem;\n`;\n\nconst TodoList = styled.ul`\n  max-height: 20rem;\n  margin-bottom: 1rem;\n  overflow: auto;\n`;\n\nexport default function App() {\n  const {\n    todos,\n    newTodo,\n    filter,\n    handleNewTodoClick,\n    handleNewTodoKeyDown,\n    handleInputChange,\n    handleToggleIsCompleted,\n    handleDeleteTodo,\n    handleClearCompletedTodos,\n    handleEditingTodo,\n    handleEditingTodoBlur,\n    handleEditingTodoKeyDown,\n    updateFilter,\n  } = useTodos();\n\n  return (\n    <AppContainer>\n      <GlobalStyle />\n\n      <NewTodoInputWrapper>\n        <NewTodoInput\n          minLength={1}\n          maxLength={64}\n          value={newTodo}\n          onChange={handleInputChange}\n          onKeyDown={handleNewTodoKeyDown}\n        />\n        <AddTodoButton onClick={handleNewTodoClick}>Add</AddTodoButton>\n      </NewTodoInputWrapper>\n\n      <FilterWrapper>\n        <FilterButton\n          onClick={() => updateFilter('all')}\n          $isActive={filter === 'all'}\n        >\n          All\n        </FilterButton>\n        <FilterButton\n          onClick={() => updateFilter('uncompleted')}\n          $isActive={filter === 'uncompleted'}\n        >\n          Uncompleted\n        </FilterButton>\n        <FilterButton\n          onClick={() => updateFilter('completed')}\n          $isActive={filter === 'completed'}\n        >\n          Completed\n        </FilterButton>\n      </FilterWrapper>\n\n      <TodoList>\n        {todos.map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsCompleted={handleToggleIsCompleted}\n            handleEditingTodo={handleEditingTodo}\n            handleEditingTodoBlur={handleEditingTodoBlur}\n            handleEditingTodoKeyDown={handleEditingTodoKeyDown}\n          />\n        ))}\n      </TodoList>\n\n      <ClearButtonWrapper>\n        <ClearButton onClick={handleClearCompletedTodos}>Clear</ClearButton>\n      </ClearButtonWrapper>\n    </AppContainer>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}